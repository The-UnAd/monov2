generator client {
  provider = "prisma-client-js"
  output   = "../build"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EFMigrationsHistory {
  MigrationId    String @id(map: "PK___EFMigrationsHistory") @db.VarChar(150)
  ProductVersion String @db.VarChar(32)

  @@map("__EFMigrationsHistory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model client {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String              @db.VarChar
  phone_number      String              @unique @db.VarChar(15)
  customer_id       String?             @db.VarChar
  subscription_id   String?             @db.VarChar
  locale            String              @default("en-US") @db.VarChar(5)
  announcement      announcement[]
  client_subscriber client_subscriber[]

  @@index([phone_number], map: "idx_client_phone_number")
}

model client_subscriber {
  client_id               String     @db.Uuid
  subscriber_phone_number String     @db.VarChar(15)
  client                  client     @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  subscriber              subscriber @relation(fields: [subscriber_phone_number], references: [phone_number], onDelete: Cascade, onUpdate: NoAction)

  @@id([client_id, subscriber_phone_number])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model subscriber {
  phone_number      String              @id @db.VarChar(15)
  joined_date       DateTime?           @default(now()) @db.Timestamptz(6)
  locale            String              @default("en-US") @db.VarChar(5)
  client_subscriber client_subscriber[]
}

model announcement {
  message_sid String    @id @db.Char(34)
  sent_on     DateTime? @default(now()) @db.Timestamptz(6)
  client_id   String?   @db.Uuid
  client      client?   @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
